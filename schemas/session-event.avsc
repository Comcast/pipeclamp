{
  "type" : "record",
  "name" : "SessionEvent",
  "namespace" : "headwaters.viper.player",
  "doc" : "Record representing an IP player analytics session (session start, session end)",
  "fields" : [ {
    "name" : "header",
    "type" : {
      "type" : "record",
      "name" : "CoreHeader",
      "namespace" : "com.comcast.headwaters",
      "doc" : "Common information which must be included in any clean event.",
      "fields" : [ {
        "name" : "timestamp",
        "type" : "long",
        "doc" : "Time Stamp. The UTC time stamp in milliseconds since Unix epoch (January 1, 1970 midnight) when the event is generated. It corresponds to the Money start-time."
      	}, {
        "name" : "uuid",
        "type" : [ "null", {
          "type" : "fixed",
          "name" : "UUID",
          "namespace" : "com.comcast.headwaters.datatype",
          "doc" : "Convey a UUID value",
          "size" : 16
        } ],
        "doc" : "Unique identifier for the event used for deduplication and tracing.",
        "default" : null
      }, {
        "name" : "money",
        "type" : [ "null", {
          "type" : "record",
          "name" : "Money",
          "doc" : "Money trace information. Encapsulates the money identifiers and additional keys that the analytics sender selects to be part of this object.",
          "fields" : [ {
            "name" : "traceId",
            "type" : "com.comcast.headwaters.datatype.UUID",
            "doc" : "Money Trace Identifier. The unique identifier of a Money Trace (i.e. the top-level object in Money). All the Spans related to the Trace hold this same UUID. It corresponds to the Money trace-id."
          }, {
            "name" : "spanId",
            "type" : "long",
            "doc" : "Money Span Identifier. The identifier of the Span (i.e. one step of the Money Trace). It is a random signed long that represents a unique id for the current Span. It corresponds to the Money span-id."
          }, {
            "name" : "parentSpanId",
            "type" : "long",
            "doc" : "Money Parent Span Identifier. Signed long that represents the direct upstream Span of the current Span. It corresponds to the Money parent-id."
          }, {
            "name" : "spanName",
            "type" : [ "null", "string" ],
            "doc" : "A logical, operator-readable name for a span.  Something like CAM.isPlayable, for CAM's isPlayable call, for instance.",
            "default" : null
          }, {
            "name" : "spanDuration",
            "type" : [ "null", "long" ],
            "doc" : "Duration of the span, in microseconds.",
            "default" : null
          }, {
            "name" : "spanSuccess",
            "type" : [ "null", "boolean" ],
            "doc" : "False if the span experienced an error, true otherwise.",
            "default" : null
          } ]
        } ],
        "doc" : "Money trace information not redundant with this object",
        "default" : null
      }, {
        "name" : "partner",
        "type" : [ "null", "string" ],
        "doc" : "Name of the partner to which the data is related",
        "default" : null
      }, {
        "name" : "hostname",
        "type" : [ "null", "string" ],
        "doc" : "Fully qualified name of the host that generated the event that generated the data",
        "default" : null
      } ]
    },
    "doc" : "Core data information required for any event"
  }, {
    "name" : "device",
    "type" : {
      "type" : "record",
      "name" : "DeviceInfo",
      "doc" : "Identifies a source device and account",
      "fields" : [ {
        "name" : "deviceId",
        "type" : "string",
        "doc" : "Device identifier uniquely generated by the reporting device",
        "default" : ""
      }, {
        "name" : "xcalAccountId",
        "type" : [ "null", "string" ],
        "doc" : "Account identifier associated to the device based on the XCAL device id",
        "default" : null
      }, {
        "name" : "xcalDeviceId",
        "type" : [ "null", "string" ],
        "doc" : "Device identifier associated to the device based on the XCAL device id",
        "default" : null
      }, {
        "name" : "appName",
        "type" : "string",
        "doc" : "Name of the application used on the client device",
        "default" : ""
      }, {
        "name" : "appVersion",
        "type" : "string",
        "doc" : "Version of the application used on the client device",
        "default" : ""
      }, {
        "name" : "deviceType",
        "type" : [ "null", {
          "type" : "enum",
          "name" : "DeviceType",
          "symbols" : [ "iOS", "Android", "Desktop", "STB" ]
        } ],
        "doc" : "Type of device",
        "default" : null
      }, {
        "name" : "ipAddress",
        "type" : [ "null", "string" ],
        "doc" : "Canonical form of the last known IP address, version 4 or version 6 (e.g. 127.0.0.1, ::1), of the client device that is reporting analytic events",
        "default" : null
      }, {
        "name" : "isp",
        "type" : [ "null", "string" ],
        "doc" : "ISP name derived from the IP address of the client device that is reporting analytic events",
        "default" : null
      }, {
        "name" : "networkLocation",
        "type" : [ "null", {
          "type" : "enum",
          "name" : "NetworkLocation",
          "symbols" : [ "InHome", "OutOfHome" ]
        } ],
        "default" : null
      }, {
        "name" : "userAgent",
        "type" : [ "null", "string" ],
        "doc" : "User agent string from the HTTP headers",
        "default" : null
      } ]
    },
    "doc" : "Information related to a video player source device"
  }, {
    "name" : "eventType",
    "type" : [ "null", {
      "type" : "enum",
      "name" : "EventType",
      "symbols" : [ "Start", "End" ]
    } ],
    "doc" : "The type of session event represented by this record",
    "default" : null
  }, {
    "name" : "startTime",
    "type" : "long",
    "doc" : "Unix time stamp in milliseconds since epoch (UTC) of the first event in the session, defaults to Jan 1st 1970",
    "default" : 0
  }, {
    "name" : "sessionId",
    "type" : [ "null", "com.comcast.headwaters.datatype.UUID" ],
    "doc" : "Identifies this event as part of a session",
    "default" : null
  }, {
    "name" : "asset",
    "type" : [ "null", {
      "type" : "record",
      "name" : "AssetId",
      "doc" : "Asset ID for all asset types, one or more values from the following fields can be set to identify a specific asset",
      "fields" : [ {
        "name" : "mediaGuid",
        "type" : [ "null", "string" ],
        "doc" : "Media GUID, one id to rule them all",
        "default" : null
      }, {
        "name" : "providerId",
        "type" : [ "null", "string" ],
        "doc" : "Provider identifier for VOD assets identified with the PAID schema",
        "default" : null
      }, {
        "name" : "assetId",
        "type" : [ "null", "string" ],
        "doc" : "Asset identifier for VOD assets identified with the PAID schema",
        "default" : null
      }, {
        "name" : "assetContentId",
        "type" : [ "null", "string" ],
        "doc" : "Content identifier for VOD assets from the CableLabs ADI specification",
        "default" : null
      }, {
        "name" : "programId",
        "type" : [ "null", "string" ],
        "doc" : "Program identifier for all assets from Merlin",
        "default" : null
      }, {
        "name" : "mediaId",
        "type" : [ "null", "string" ],
        "doc" : "Media identifier for VOD assets from Merlin",
        "default" : null
      }, {
        "name" : "platformId",
        "type" : [ "null", "string" ],
        "doc" : "thePlatform identifier for VOD assets from MPX",
        "default" : null
      }, {
        "name" : "recordingId",
        "type" : [ "null", "string" ],
        "doc" : "Recording id for cDVR assets from the recording scheduler",
        "default" : null
      }, {
        "name" : "streamId",
        "type" : [ "null", "string" ],
        "doc" : "Stream identifier for linear assets from Merlin",
        "default" : null
      }, {
        "name" : "EAS_URI",
        "type" : [ "null", "string" ],
        "doc" : "EAS identifier for emergency alerts.",
        "default" : null
      } ]
    } ],
    "doc" : "Asset identifier(s), if available",
    "default" : null
  }, {
    "name" : "assetMetadata",
    "type" : [ "null", {
      "type" : "record",
      "name" : "AssetMetadata",
      "doc" : "Definition of asset metadata wrapper object",
      "fields" : [ {
        "name" : "assetDefinition",
        "type" : [ "null", {
          "type" : "enum",
          "name" : "AssetDefinition",
          "symbols" : [ "SD", "HD", "PEG" ]
        } ],
        "doc" : "Asset definition (standard, high-def)",
        "default" : null
      }, {
        "name" : "title",
        "type" : [ "null", "string" ],
        "doc" : "Title of the video asset",
        "default" : null
      }, {
        "name" : "duration",
        "type" : [ "null", "int" ],
        "doc" : "The total duration in milliseconds of the video asset being decoded",
        "default" : null
      } ]
    } ],
    "doc" : "See data type defined herein, may not be available if session started without asset information",
    "default" : null
  }, {
    "name" : "assetClass",
    "type" : [ "null", {
      "type" : "enum",
      "name" : "AssetClass",
      "symbols" : [ "Linear", "VOD", "cDVR", "EAS" ]
    } ],
    "doc" : "A string representation for Linear, VOD, or cDVR assets",
    "default" : null
  }, {
    "name" : "geolocation",
    "type" : [ "null", {
      "type" : "record",
      "name" : "Geolocation",
      "doc" : "Definition of geolocation wrapper object",
      "fields" : [ {
        "name" : "city",
        "type" : [ "null", "string" ],
        "doc" : "The name of the city",
        "default" : null
      }, {
        "name" : "state",
        "type" : [ "null", "string" ],
        "doc" : "The name of the state",
        "default" : null
      }, {
        "name" : "region",
        "type" : [ "null", "string" ],
        "doc" : "Comcast region identifier defined internally as a group of zip codes",
        "default" : null
      }, {
        "name" : "postalCode",
        "type" : [ "null", "string" ],
        "doc" : "ZIP code information",
        "default" : null
      }, {
        "name" : "fipsCode",
        "type" : [ "null", "string" ],
        "doc" : "Inferred from postalCode",
        "default" : null
      }, {
        "name" : "country",
        "type" : [ "null", "string" ],
        "doc" : "A two-character ISO 3166-1 country code",
        "default" : null
      }, {
        "name" : "latitude",
        "type" : [ "null", "float" ],
        "default" : null
      }, {
        "name" : "longitude",
        "type" : [ "null", "float" ],
        "default" : null
      } ]
    } ],
    "doc" : "See data type defined herein, information are based on client IP address lookup in MaxMind database",
    "default" : null
  }, {
    "name" : "sessionDuration",
    "type" : "int",
    "doc" : "Duration in milliseconds computed between the timestamp of the last event and the session start time",
    "default" : 0
  }, {
    "name" : "firstAssetPosition",
    "type" : [ "null", "int" ],
    "doc" : "Position in milliseconds indicating where in the asset the playback started (0 corresponds to the beginning of the asset, a positive integer indicates a resume point)",
    "default" : null
  }, {
    "name" : "lastAssetPosition",
    "type" : [ "null", "int" ],
    "doc" : "Position in milliseconds relative to the beginning of the asset for the current session event. For a session start event, it likely would have the same value as the firstAssetPosition field, while for a session end event it would indicate the progress of the playback session",
    "default" : null
  }, {
    "name" : "drmLatency",
    "type" : [ "null", "int" ],
    "doc" : "Measurement in milliseconds reported by the client for the time required to negotiate DRM rights",
    "default" : null
  }, {
    "name" : "openLatency",
    "type" : [ "null", "int" ],
    "doc" : "Measurement in milliseconds reported by the client for the interval that occurred between video asset request and video playback start",
    "default" : null
  }, {
    "name" : "trickplayEvents",
    "type" : [ "null", {
      "type" : "record",
      "name" : "EventSeries",
      "namespace" : "headwaters.viper.player.datatype",
      "doc" : "Represents a series of events by mapping event names with a corresponding array of time offsets. For example trick play events could be represented as: <pause, [1029, 45412]>",
      "fields" : [ {
        "name" : "EventKey",
        "type" : [ "null", {
          "type" : "map",
          "values" : {
            "type" : "record",
            "name" : "OffsetSeries",
            "doc" : "Represents a list of time offsets in milliseconds from the beginning of the session",
            "fields" : [ {
              "name" : "Offsets",
              "type" : [ "null", {
                "type" : "array",
                "items" : "int"
              } ],
              "default" : null
            } ]
          }
        } ],
        "default" : null
      } ]
    } ],
    "doc" : "The key of the event series is the trick play event value: play, pause, stop, ffwd, rwd",
    "default" : null
  }, {
    "name" : "bufferingEvents",
    "type" : [ "null", "headwaters.viper.player.datatype.OffsetSeries" ],
    "doc" : "Offset in milliseconds of each buffering event relative to the session start time",
    "default" : null
  }, {
    "name" : "fragmentWarningEvents",
    "type" : [ "null", "headwaters.viper.player.datatype.OffsetSeries" ],
    "doc" : "Offset in milliseconds of each fragment warning event relative to the session start time",
    "default" : null
  }, {
    "name" : "completionStatus",
    "type" : [ "null", {
      "type" : "enum",
      "name" : "CompletionStatus",
      "symbols" : [ "MediaEnded", "MediaFailed", "MediaSwitched", "Timeout" ]
    } ],
    "doc" : "Identifies how the session ended. Possible scenarios are: media played back to end of asset (MediaEnded), a fatal error occurred during playback (MediaFailed), the device stopped reporting events for a time exceeding the session timeout of 180 seconds (Timeout), or the device switched to a new asset (MediaSwitched)",
    "default" : null
  }, {
    "name" : "playbackType",
    "type" : [ "null", {
      "type" : "enum",
      "name" : "PlaybackType",
      "symbols" : [ "Stream", "Local" ]
    } ],
    "doc" : "[Not Implemented Yet] Identifies if the asset is streamed, which is the common use case when the player streams the content while online or if the asset has been dowloaded locally on the device and the local file is played back",
    "default" : null
  }, {
    "name" : "playbackStarted",
    "type" : [ "null", "boolean" ],
    "doc" : "Flag that indicates whether or not the video playback started successfully",
    "default" : null
  }, {
    "name" : "errorEvents",
    "type" : [ "null", {
      "type" : "array",
      "items" : {
        "type" : "record",
        "name" : "PlayerError",
        "doc" : "Definition of a wrapper object for errors",
        "fields" : [ {
          "name" : "offset",
          "type" : "int",
          "doc" : "Offset in milliseconds since the session start time that marks the occurrence of this error event",
          "default" : -1
        }, {
          "name" : "message",
          "type" : [ "null", "string" ],
          "doc" : "The message (i.e. description) of the error",
          "default" : null
        }, {
          "name" : "code",
          "type" : [ "null", "string" ],
          "doc" : "The error code. It may be a formatted string or a generic string",
          "default" : null
        }, {
          "name" : "errorType",
          "type" : {
            "type" : "enum",
            "name" : "ErrorType",
            "symbols" : [ "Unknown", "Fatal", "Generic" ]
          },
          "doc" : "Identifies the type of error when possible. Fatal errors result in video playback interruption, generic errors are used to report issues that are not interrupting the playback",
          "default" : "Unknown"
        } ]
      }
    } ],
    "doc" : "A list of error events that occurred during the session",
    "default" : null
  }, {
    "name" : "frameRateMin",
    "type" : [ "null", "int" ],
    "doc" : "Minimum frame-per-second value reported by the player",
    "default" : null
  }, {
    "name" : "frameRateMax",
    "type" : [ "null", "int" ],
    "doc" : "Maximum frame-per-second value reported by the player",
    "default" : null
  }, {
    "name" : "bitRateMin",
    "type" : [ "null", "int" ],
    "doc" : "Minimum bitrate value reported by the player",
    "default" : null
  }, {
    "name" : "bitRateMax",
    "type" : [ "null", "int" ],
    "doc" : "Maximum bitrate value reported by the player",
    "default" : null
  } ]
}